{"version":3,"sources":["api/useFetch.js","api/dataRoutes.js","images/Rick-and-Morty-Art-Book-The-Art-of-Rick-and-Morty-English-Version.webp","components/main.jsx","components/characters/character.jsx","components/locations/location.jsx","components/characters/characters.js","components/locations/locations.js","App.js","api/useData.js","serviceWorker.js","fonts/get_schwifty.ttf","index.js"],"names":["useFetch","initUrl","useState","url","setUrl","undefined","data","setData","useEffect","fetch","then","response","status","json","mainUrls","rotate","keyframes","fadein","resize","Button","styled","div","Container","Image","logo","Box","Content","props","showing","Main","onClick","setDescriptionHidden","charactersHidden","locationsHidden","isDescriptionHidden","useStyles","makeStyles","theme","hidden","display","root","position","inset","paper","width","background","img","margin","maxWidth","maxHeight","tile","button","padding","cursor","color","border","badgesmall","backgroundColor","badgelarge","title","dialog","link","fontlarge","fontsmall","fontxsmall","RmButton","transform","Transition","React","forwardRef","ref","Slide","direction","Character","classes","episodeData","setEpisodeData","episodeOpen","setEpisodeOpen","anchorEl","setAnchorEl","getData","type","id","character","Array","isArray","length","getLinkData","subtype","getEpisodeList","getUrlLast","substring","lastIndexOf","className","Paper","Grid","container","spacing","item","Badge","anchorOrigin","vertical","horizontal","max","badgeContent","badge","alt","src","md","xs","justify","alignItems","Typography","variant","h2","lg","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","map","index","MenuItem","_","handleEpisodeClick","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","name","DialogContent","DialogContentText","episode","air_date","DialogActions","Link","underline","setLocationUrl","setCharacterId","Location","residentData","setResidentData","residentOpen","setResidentOpen","location","getResidentList","locationId","handleResidentClick","gender","species","setLocationId","CharactersDiv","Title","h1","CardsContainer","Item","Picture","Characters","characters","setCharPage","setCharactersHidden","currentPageNo","marginTop","setCharacter","characterId","locationUrl","setLocation","isBottom","setIsBottom","handleScroll","scrollTop","document","documentElement","body","scrollHeight","window","innerHeight","results","items","setItems","itemsPage","setItemsPage","addEventListener","removeEventListener","concat","renderPagination","Pagination","count","info","pages","page","onChange","value","element","image","renderCards","LocDiv","LocContainer","Card","PageContainer","Span","span","PageNumber","CountButton","Locations","locations","setLocPage","setLocationsHidden","locPage","characterUrl","setCharacterUrl","increasePage","decreasePage","Wrapper","App","charPage","pageNum","useCharacters","useLocations","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63b4d788.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n     Fetch data from the given url. If it can't get any data from the url, than it writes a message into the console.\r\n     *\r\n     * @param initUrl string that gives the route that the function fetch data from.\r\n     */\r\nexport const useFetch = (initUrl) => {\r\n  const [url, setUrl] = useState(initUrl);\r\n  const [data, setData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) return \"There must be a problem\";\r\n        return response.json();\r\n      })\r\n      .then((json) => setData(json));\r\n  }, [url]);\r\n\r\n  return [data, setUrl];\r\n};\r\n","export const mainUrls = {\r\n  characters: \"https://rickandmortyapi.com/api/character/?page=\",\r\n  locations: \"https://rickandmortyapi.com/api/location/?page=\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Rick-and-Morty-Art-Book-The-Art-of-Rick-and-Morty-English-Version.dd03010b.webp\";","import styled, { keyframes } from \"styled-components\";\r\nimport logo from \"../images/Rick-and-Morty-Art-Book-The-Art-of-Rick-and-Morty-English-Version.webp\";\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst fadein = keyframes`\r\n  0%   { opacity: 0; }  \r\n  100% { opacity: 1; }\r\n`;\r\n\r\nconst resize = keyframes`\r\n    0%   {font-size: .1em}  \r\n  100%   {font-size: 1em}\r\n`;\r\n\r\nconst Button = styled.div`\r\n  display: inline-block;\r\n  margin: 20px;\r\n  padding: 0.6em 1.1em;\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  background-color: #324568;\r\n  border: none;\r\n  border-radius: 0.62em;\r\n  box-shadow: 0 0.25em #89511f;\r\n\r\n  &:hover {\r\n    background-color: #0ab4ca;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #324568;\r\n    box-shadow: 0 0.125em #3d3c3f;\r\n    transform: translateY(0.25em);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  text-align: center;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 90vw;\r\n  min-width: 240px;\r\n\r\n  & > * {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 50vw;\r\n  height: 50vh;\r\n  background: url(${logo}) center center no-repeat;\r\n  max-width: 60%;\r\n  background-size: contain;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  text-align: center;\r\n  justify-content: space-evenly;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  opacity: ${(props) => {\r\n    return props.showing;\r\n  }};\r\n  transition: opacity 1s ease-out;\r\n  p {\r\n    animation: ${rotate} 0.5s 3, ${resize} 1.5s ease-out, ${fadein} 1.5s ease-in;\r\n  }\r\n`;\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container>\r\n      <Image />\r\n\r\n      <Box>\r\n        <Button\r\n          onClick={() => {\r\n            props.setDescriptionHidden(0);\r\n            props.charactersHidden(false);\r\n          }}\r\n        >\r\n          Characters\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            props.setDescriptionHidden(0);\r\n            props.locationsHidden(false);\r\n          }}\r\n        >\r\n          Locations\r\n        </Button>\r\n      </Box>\r\n\r\n      <Content showing={props.isDescriptionHidden}>\r\n        <p>\r\n          Here is a description describing the website functionality.\r\n          <br />\r\n          If you click on the `Characters` button, a list of characters shows up\r\n          <br />\r\n          If you click on the `Locations` button, a list of locations shows up\r\n        </p>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hidden: {\r\n    display: \"none\",\r\n  },\r\n  root: {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n    \"justify-content\": \"center\",\r\n    inset: \"0px\",\r\n    \"background-color\": \"rgba(61, 60, 63, 0.5)\",\r\n    \"max-width\": \"100vw\",\r\n  },\r\n  paper: {\r\n    width: \"50vw\",\r\n    background: \"white\",\r\n    \"text-align\": \"center\",\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  tile: {\r\n    \"background-color\": \"#a8d9ef\",\r\n  },\r\n  button: {\r\n    display: \"inline-block\",\r\n    margin: \"20px\",\r\n    padding: \"0.3em 0.55em\",\r\n    \"font-size\": \"0.75em\",\r\n    cursor: \"pointer\",\r\n    \"text-decoration\": \"none\",\r\n    color: \"#ffffff\",\r\n    \"background-color\": \"#324568\",\r\n    border: \"none\",\r\n    \"border-radius\": \"0.62em\",\r\n    \"box-shadow\": \"0 0.25em #89511f\",\r\n  },\r\n  badgesmall: {\r\n    backgroundColor: \"#324568\",\r\n    color: \"white\",\r\n    \"font-family\": \"inherit\",\r\n  },\r\n  badgelarge: {\r\n    backgroundColor: \"#324568\",\r\n    color: \"white\",\r\n    \"font-size\": \"1em\",\r\n    \"font-family\": \"inherit\",\r\n    padding: \"1em\",\r\n  },\r\n  title: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"2.5em\",\r\n  },\r\n  dialog: {\r\n    background: \"  #89511f\",\r\n  },\r\n  link: {\r\n    cursor: \"pointer\",\r\n  },\r\n  fontlarge: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"1.3em\",\r\n  },\r\n  fontsmall: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"0.8em\",\r\n  },\r\n  fontxsmall: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"0.6em\",\r\n  },\r\n}));\r\n\r\nconst RmButton = styled(Button)({\r\n  display: \"inline-block\",\r\n  margin: \"20px\",\r\n  padding: \"0.3em 0.55em\",\r\n  \"font-size\": \"0.75em\",\r\n  cursor: \"pointer\",\r\n  \"text-decoration\": \"none\",\r\n  color: \"#ffffff\",\r\n  \"background-color\": \"#324568\",\r\n  border: \"none\",\r\n  \"border-radius\": \"0.62em\",\r\n  \"box-shadow\": \"0 0.25em #89511f\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#0ab4ca\",\r\n  },\r\n  \"&:active\": {\r\n    \"background-color\": \"#324568\",\r\n    \"box-shadow\": \"0 0.125em #3d3c3f\",\r\n    transform: \"translateY(0.25em)\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Character(props) {\r\n  const classes = useStyles(props);\r\n\r\n  const [episodeData, setEpisodeData] = useState({});\r\n  const [episodeOpen, setEpisodeOpen] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClickEpisodes = (event) => {\r\n    if (getData(\"episode\") > 0) setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleEpisodeClick = (_, index) => {\r\n    const url = getEpisodeList()[index];\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) return \"There must be a problem\";\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        setEpisodeData(json);\r\n        setEpisodeOpen(true);\r\n      });\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseEpisodes = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const getData = (type) => {\r\n    if (props.id > 0) {\r\n      const data = props.character[type];\r\n\r\n      return Array.isArray(data) ? data.length : data;\r\n    } else return \"\";\r\n  };\r\n\r\n  const getLinkData = (type, subtype) => {\r\n    if (props.id > 0) {\r\n      \r\n      const data = props.character[type];\r\n   \r\n      return data[subtype];\r\n    } else return \"\";\r\n  };\r\n\r\n  const getEpisodeList = () => {\r\n    if (props.id > 0) {      \r\n      return Array.isArray(props.character[\"episode\"]) ? props.character[\"episode\"] : [];\r\n    } else return [];\r\n  };\r\n\r\n  const getUrlLast = (url) => {\r\n    return url.substring(url.lastIndexOf(\"/\") + 1);\r\n  };\r\n\r\n  return (\r\n    <Container className={props.id > 0 ? classes.root : classes.hidden}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={4}>\r\n          <Grid item>\r\n            <Badge\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              max={999}\r\n              badgeContent={getUrlLast(getData(\"url\"))}\r\n              classes={{ badge: classes.badgelarge }}\r\n            >\r\n              <img\r\n                className={classes.img}\r\n                alt={getData(\"name\")}\r\n                src={getData(\"image\")}\r\n              />\r\n            </Badge>\r\n          </Grid>\r\n\r\n          <Grid item md container spacing={2} classes={{ root: classes.tile }}>\r\n            <Grid\r\n              item\r\n              xs\r\n              container\r\n              spacing={2}\r\n              justify=\"space-evenly\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <Badge\r\n                  badgeContent={getData(\"species\")}\r\n                  classes={{ badge: classes.badgesmall }}\r\n                >\r\n                  <Typography variant=\"h2\" classes={{ h2: classes.title }}>\r\n                    {getData(\"name\")}\r\n                  </Typography>\r\n                </Badge>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                {getData(\"type\")}\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n                  Gender\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" classes={{ root: classes.fontlarge }}>\r\n                  {getData(\"gender\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n                  Status\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" classes={{ root: classes.fontlarge }}>\r\n                  {getData(\"status\")}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n                  Episodes\r\n                </Typography>\r\n\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  classes={{ root: classes.fontlarge }}\r\n                  onClick={handleClickEpisodes}\r\n                >\r\n                  {getData(\"episode\")}\r\n                </Typography>\r\n                <Menu\r\n                  id=\"episodes-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleCloseEpisodes}\r\n                >\r\n                  {getEpisodeList().map((url, index) => (\r\n                    <MenuItem\r\n                      key={url}\r\n                      onClick={(event) => handleEpisodeClick(event, index)}\r\n                    >\r\n                      Episode {getUrlLast(url)}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n                <Dialog\r\n                  open={episodeOpen}\r\n                  TransitionComponent={Transition}\r\n                  keepMounted\r\n                  aria-labelledby=\"alert-dialog-slide-title\"\r\n                  aria-describedby=\"alert-dialog-slide-description\"\r\n                  classes={{ paper: classes.dialog }}\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    <span>{episodeData.name}</span>\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                      Episode ID: <span>{episodeData.episode}</span>\r\n                      <br />\r\n                      Air date: <span>{episodeData.air_date}</span>\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <RmButton onClick={() => setEpisodeOpen(false)}>Close</RmButton>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n              Origin\r\n            </Typography>\r\n\r\n            <Typography variant=\"inherit\">\r\n              <Link\r\n                variant=\"inherit\"\r\n                classes={{ root: classes.link }}\r\n                underline={getLinkData(\"origin\", \"url\") === \"\" ? \"none\" : \"always\"}\r\n                onClick={() => {                  \r\n                  props.setLocationUrl(getLinkData(\"origin\", \"url\"));\r\n                }}\r\n              >\r\n                {getLinkData(\"origin\", \"name\")}\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n              Location\r\n            </Typography>\r\n\r\n            <Typography variant=\"inherit\">\r\n              <Link\r\n                variant=\"inherit\"\r\n                classes={{ root: classes.link }}\r\n                underline={getLinkData(\"location\", \"url\") === \"\" ? \"none\" : \"always\"}\r\n                onClick={() => {\r\n                  props.setLocationUrl(getLinkData(\"location\", \"url\"));\r\n                }}\r\n              >\r\n                {getLinkData(\"location\", \"name\")}\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <RmButton\r\n              onClick={() => {\r\n                props.setCharacterId(0);\r\n              }}\r\n            >\r\n              Close\r\n            </RmButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hidden: {\r\n    display: \"none\",\r\n  },\r\n  root: {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n    \"justify-content\": \"center\",\r\n    inset: \"0px\",\r\n    \"background-color\": \"rgba(61, 60, 63, 0.5)\",\r\n    \"max-width\": \"100vw\",\r\n  },\r\n  paper: {\r\n    width: \"50vw\",\r\n    background: \"white\",\r\n    \"text-align\": \"center\",\r\n  },\r\n  tile: {\r\n    \"background-color\": \"#a8d9ef\",\r\n  },\r\n  title: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"2.5em\",\r\n  },\r\n  dialog: {\r\n    background: \"  #89511f\",\r\n  },\r\n  fontlarge: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"1.3em\",\r\n  },\r\n  fontsmall: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"0.8em\",\r\n  },\r\n  fontxsmall: {\r\n    \"font-family\": \"inherit\",\r\n    \"font-size\": \"0.6em\",\r\n  },\r\n}));\r\n\r\nconst RmButton = styled(Button)({\r\n  display: \"inline-block\",\r\n  margin: \"20px\",\r\n  padding: \"0.3em 0.55em\",\r\n  \"font-size\": \"0.75em\",\r\n  cursor: \"pointer\",\r\n  \"text-decoration\": \"none\",\r\n  color: \"#ffffff\",\r\n  \"background-color\": \"#324568\",\r\n  border: \"none\",\r\n  \"border-radius\": \"0.62em\",\r\n  \"box-shadow\": \"0 0.25em #89511f\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#0ab4ca\",\r\n  },\r\n  \"&:active\": {\r\n    \"background-color\": \"#324568\",\r\n    \"box-shadow\": \"0 0.125em #3d3c3f\",\r\n    transform: \"translateY(0.25em)\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Location(props) {\r\n  const classes = useStyles(props);\r\n\r\n  const [residentData, setResidentData] = useState({});\r\n  const [residentOpen, setResidentOpen] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClickResidents = (event) => {\r\n    if (getData(\"residents\") > 0) setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleResidentClick = (_, index) => {\r\n    const url = getResidentList()[index];\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) return \"There must be a problem\";\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        setResidentData(json);\r\n        setResidentOpen(true);\r\n      });\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseResidents = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const getData = (type) => {\r\n    if (props.location !== undefined) {\r\n      return Array.isArray(props.location[type])\r\n        ? props.location[type].length\r\n        : props.location[type];\r\n    } else return \"\";\r\n  };\r\n  /* \r\n  const getLinkData = (type, subtype) => {\r\n    if (props.id > 0) {\r\n      const ids = props.locations.results.filter((value) => {\r\n        return value.id === props.id;\r\n      });\r\n\r\n      const data = ids[0][type];\r\n\r\n      return data[subtype];\r\n    } else return \"\";\r\n  };\r\n */\r\n  const getResidentList = () => {\r\n    if (props.location !== undefined) {\r\n      return Array.isArray(props.location[\"residents\"])\r\n        ? props.location[\"residents\"]\r\n        : [];\r\n    } else return [];\r\n  };\r\n\r\n  const getUrlLast = (url) => {\r\n    return url.substring(url.lastIndexOf(\"/\") + 1);\r\n  };\r\n\r\n  return (\r\n    <Container className={props.locationId ? classes.root : classes.hidden}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={6} justify=\"space-evenly\" alignItems=\"center\">\r\n          <Grid item xs={12} classes={{ root: classes.tile }}>\r\n            <Typography variant=\"inherit\">Location</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h2\" classes={{ h2: classes.title }}>\r\n              {getData(\"name\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {getData(\"dimension\")}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n              Residents\r\n            </Typography>\r\n\r\n            <Typography\r\n              variant=\"body1\"\r\n              classes={{ root: classes.fontlarge }}\r\n              onClick={handleClickResidents}\r\n            >\r\n              {getData(\"residents\")}\r\n            </Typography>\r\n            <Menu\r\n              id=\"residents-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleCloseResidents}\r\n            >\r\n              {getResidentList().map((url, index) => (\r\n                <MenuItem\r\n                  key={url}\r\n                  onClick={(event) => handleResidentClick(event, index)}\r\n                >\r\n                  Resident {getUrlLast(url)}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n            <Dialog\r\n              open={residentOpen}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n              classes={{ paper: classes.dialog }}\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                <span>{residentData.name}</span>\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  <br />\r\n                  <br />\r\n                  Gender: <span>{residentData.gender}</span>\r\n                  <br />\r\n                  <br />\r\n                  Species: <span>{residentData.species}</span>\r\n                  <br />\r\n                  <br />\r\n                  Status: <span>{residentData.status}</span>\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <RmButton onClick={() => setResidentOpen(false)}>Close</RmButton>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\" classes={{ root: classes.fontsmall }}>\r\n              Type\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" classes={{ root: classes.fontlarge }}>\r\n              {getData(\"type\")}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <RmButton\r\n              onClick={() => {\r\n                props.setLocationId(0);\r\n              }}\r\n            >\r\n              Close\r\n            </RmButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n/* import chroma from \"chroma-js\";*/\r\nimport \"./characters.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Character from \"./character\";\r\nimport Location from \"../locations/location\";\r\n\r\nimport { mainUrls } from \"../../api/dataRoutes\";\r\n\r\n//TODO List\r\n//1. Character kártyák adatainak a kinyerése a state-be\r\n//2. Map-pel megjeleníteni a kártyákat,\r\n//3. a kártyákra onClick -re a props.setCharacterID(....) kell meghívni, ahol a ... a kártya id-je\r\n//4. Pagination létrehozása, megadom prop-ként, hogy hány fajta page van és egy changePage függvényt\r\n//5. Kirenderelem az oldalszámokat, rakok rájuk onclick-et és kirendereli a changepage-et\r\n//6. Konkrét lapozás megcsinálása\r\n\r\nconst CharactersDiv = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  /* background-color: #f8c6a0; */\r\n`;\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  color: #89511f;\r\n  font-weight: 900;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 20px;\r\n\r\n  margin: 20px;\r\n  padding: 0.6em 1.1em;\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  background-color: #324568;\r\n  border: none;\r\n  border-radius: 0.62em;\r\n  box-shadow: 0 0.25em #89511f;\r\n  margin-bottom: 20px;\r\n  &:hover {\r\n    background-color: #0ab4ca;\r\n  }\r\n  &:active {\r\n    background-color: #324568;\r\n    box-shadow: 0 0.125em #3d3c3f;\r\n    transform: translateY(0.25em);\r\n  }\r\n`;\r\n\r\nconst CardsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  /* grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: 200px 200px 200px 200px;\r\n  grid-gap: 10px; */\r\n  margin: 20px 50px;\r\n  padding-bottom: 10px;\r\n  background-color: #f8c6a0;\r\n  box-shadow: 0 0 3px #324568;\r\n  border-radius: 0.62em;\r\n`;\r\nconst Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  padding: 5px 10px;\r\n  background-color: #324568;\r\n  color: #f7ed73;\r\n  margin: 5px 20px;\r\n  width: 220px;\r\n  font-size: 0.6rem;\r\n  font-weight: 900;\r\n  box-shadow: 0 0 3px #324568;\r\n  border: none;\r\n  border-radius: 2px;\r\n  height: 130px;\r\n  font-size: 0.7rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Picture = styled.img`\r\n  width: 60px;\r\n  height: 50px;\r\n  margin: 5px 8px 5px 5px;\r\n  margin-left: auto;\r\n`;\r\nconst Characters = ({\r\n  characters,\r\n  charactersHidden,\r\n  setCharPage,\r\n  setCharactersHidden,\r\n  currentPageNo,\r\n}) => {\r\n  // console.log(charactersHidden);\r\n  // console.log(showCharacter);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [character, setCharacter] = useState({});\r\n  const [characterId, setCharacterId] = useState(-1);\r\n\r\n  const [locationId, setLocationId] = useState(0);\r\n  const [locationUrl, setLocationUrl] = useState(\"\");\r\n  const [location, setLocation] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (locationUrl)\r\n      fetch(locationUrl)\r\n        .then((response) => {\r\n          if (response.status !== 200) return setLocation({});\r\n          return response.json();\r\n        })\r\n        .then((json) => {\r\n          setLocation(json);\r\n          setLocationId(json.id);\r\n        });\r\n  }, [locationUrl]);\r\n\r\n  useEffect(() => {\r\n    if (locationId === 0) setLocationUrl(\"\");\r\n  }, [locationId]);\r\n\r\n  const [isBottom, setIsBottom] = useState(false);\r\n\r\n  function handleScroll() {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    if (scrollTop + window.innerHeight + 450 >= scrollHeight) {\r\n      setIsBottom(true);\r\n    }\r\n  }\r\n\r\n  const [items, setItems] = useState(characters.results);\r\n  const [itemsPage, setItemsPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setItems(characters.results);\r\n  }, [characters.results, setItems]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const addItems = () => {      \r\n      const url =\r\n        mainUrls.characters + (itemsPage === 0 ? currentPageNo + 1: itemsPage + 1);\r\n      fetch(url)\r\n        .then((response) => {\r\n          if (response.status !== 200) {\r\n            setIsBottom(false);\r\n            return {};\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((json) => {\r\n          if (json.results !== undefined) {\r\n            setIsBottom(false);\r\n            setItems(items.concat(json.results));\r\n            setItemsPage(itemsPage === 0 ? currentPageNo + 1 : itemsPage + 1);\r\n          }\r\n        });\r\n    };\r\n\r\n    if (isBottom) {\r\n      addItems();\r\n    }\r\n  }, [isBottom, currentPageNo, itemsPage, items]);\r\n\r\n  const renderCards = () => {\r\n    if (items) {\r\n      // console.log(characters);\r\n      return items.map((element) => {\r\n        return (\r\n          <Item\r\n            id={element.id}\r\n            key={element.id}\r\n            onClick={() => {\r\n              setCharacter(element);\r\n              setCharacterId(element.id);\r\n            }}\r\n          >\r\n            <Picture\r\n              className=\"character-card-data\"\r\n              id=\"img+{element.id}\"\r\n              key=\"picture+{element.id}\"\r\n              src={element.image}\r\n            ></Picture>\r\n            <div className=\"character-card-data\">\r\n              <span className=\"character-span\">Name:</span>\r\n              {element.name}\r\n            </div>\r\n            <div className=\"character-card-data\">\r\n              <span className=\"character-span\">Species:</span>\r\n              {element.species}\r\n            </div>\r\n          </Item>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (itemsPage === 0)\r\n      return (\r\n        <Pagination\r\n          count={characters.info ? characters.info.pages : 0}\r\n          page={currentPageNo}\r\n          onChange={(_, value) => {\r\n            setCharPage(value);\r\n          }}\r\n        />\r\n      );\r\n  };\r\n\r\n  return (\r\n    <CharactersDiv className={charactersHidden ? \"hidden\" : \"\"}>\r\n      <Button\r\n        onClick={() => {\r\n          setCharactersHidden(true);\r\n        }}\r\n      >\r\n        Close\r\n      </Button>\r\n\r\n      <Title>Characters</Title>\r\n\r\n      {renderPagination()}\r\n\r\n      <CardsContainer className={classes.root}>{renderCards()}</CardsContainer>\r\n\r\n      {renderPagination()}\r\n\r\n      {isBottom && \"Fetching more characters...\"}\r\n\r\n      <Character\r\n        id={characterId}\r\n        characters={characters}\r\n        character={character}\r\n        setCharacterId={setCharacterId}\r\n        setLocationUrl={setLocationUrl}\r\n      />\r\n\r\n      <Location\r\n        locationId={locationId}\r\n        setLocationId={setLocationId}\r\n        location={location}\r\n      />\r\n    </CharactersDiv>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./locations.css\";\r\n// import Pagination from \"@material-ui/lab/Pagination\";\r\n//import { useLocations } from \"../../api/useData.js\";\r\nimport Location from \"./location\";\r\nimport Character from \"../characters/character\";\r\n\r\nimport { mainUrls } from \"../../api/dataRoutes\";\r\n\r\nconst LocDiv = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 50px;\r\n  /* background-color: #f8c6a0; */\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  color: #89511f;\r\n`;\r\n\r\nconst LocContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  margin: 20px 50px;\r\n  padding-bottom: 10px;\r\n  background-color: #f8c6a0;\r\n  box-shadow: 0 0 3px #324568;\r\n  border-radius: 0.62em;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  color: #a8d9ef;\r\n  background-color: #324568;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 10px;\r\n  margin: 10px 20px;\r\n  width: 220px;\r\n  height: 130px;\r\n  font-size: 0.8rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst PageContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  display: flex;\r\n  width: 20%;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-weight: bold;\r\n  color: #a0a0a0;\r\n`;\r\n\r\nconst PageNumber = styled.span`\r\n  color: #0ab4ca;\r\n  font-size: 3em;\r\n`;\r\n\r\nconst CountButton = styled.button`\r\n  background-color: #a8d9ef;\r\n  width: 10%;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  font-size: 1.2em;\r\n  color: #89511f;\r\n  background-color: #a8d9ef;\r\n  border-color: #a8d9ef;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 20px;\r\n  margin: 20px;\r\n  padding: 0.6em 1.1em;\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  background-color: #324568;\r\n  border: none;\r\n  border-radius: 0.62em;\r\n  box-shadow: 0 0.25em #89511f;\r\n  margin-bottom: 20px;\r\n  &:hover {\r\n    background-color: #0ab4ca;\r\n  }\r\n  &:active {\r\n    background-color: #324568;\r\n    box-shadow: 0 0.125em #3d3c3f;\r\n    transform: translateY(0.25em);\r\n  }\r\n`;\r\n\r\nconst Locations = ({\r\n  locations,\r\n  locationsHidden,\r\n  setLocPage,\r\n  setLocationsHidden,\r\n  locPage,\r\n}) => {\r\n  const [location, setLocation] = useState({});\r\n  \r\n  \r\n  const [characterId, setCharacterId] = useState(0);\r\n  const [characterUrl, setCharacterUrl] = useState(\"\");\r\n  const [character, setCharacter] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (characterUrl)\r\n      fetch(characterUrl)\r\n        .then((response) => {\r\n          if (response.status !== 200) return setLocation({});\r\n          return response.json();\r\n        })\r\n        .then((json) => {\r\n          setCharacter(json);\r\n          setCharacterId(json.id);\r\n        });\r\n  }, [characterUrl]);\r\n\r\n  useEffect(() => {\r\n    if (characterId === 0) setCharacterUrl(\"\");\r\n  }, [characterId]);\r\n\r\n  const increasePage = () => {\r\n    if (locPage < locations.info.pages) {\r\n      setLocPage(locPage + 1);\r\n    }\r\n  };\r\n\r\n  const decreasePage = () => {\r\n    if (locPage > 1) {\r\n      setLocPage(locPage - 1);\r\n    }\r\n  };\r\n\r\n  const [isBottom, setIsBottom] = useState(false);\r\n\r\n  function handleScroll() {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\r\n      setIsBottom(true);\r\n    }\r\n  }\r\n\r\n  const [items, setItems] = useState(locations.results);\r\n  const [itemsPage, setItemsPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setItems(locations.results);\r\n  }, [locations.results, setItems]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const addItems = () => {\r\n      const url =\r\n        mainUrls.locations + (itemsPage === 0 ? locPage + 1 : itemsPage + 1);\r\n      fetch(url)\r\n        .then((response) => {\r\n          if (response.status !== 200) {\r\n            setIsBottom(false);\r\n            return {};\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((json) => {\r\n          if (json.results !== undefined) {\r\n            setIsBottom(false);\r\n            setItems(items.concat(json.results));\r\n            setItemsPage(itemsPage === 0 ? locPage + 1 : itemsPage + 1);\r\n          }\r\n        });\r\n    };\r\n\r\n    if (isBottom) {\r\n      addItems();\r\n    }\r\n  }, [isBottom, locPage, itemsPage, items]);\r\n\r\n  const locContent = () => {\r\n    if (Array.isArray(items)) {\r\n      return items.map((element) => {\r\n        return (\r\n          <Card\r\n            id={element.id}\r\n            key={element.id}\r\n            onClick={() => {\r\n              setLocation(element);\r\n            }}\r\n          >\r\n            <div className=\"loccard-data\">\r\n              <Span>Name: </Span>\r\n              {element.name}\r\n            </div>\r\n            <div className=\"loccard-data\">\r\n              <Span>Type: </Span>\r\n              {element.type}\r\n            </div>\r\n          </Card>\r\n        );\r\n      });\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    if (itemsPage === 0) {\r\n      return (\r\n        <PageContainer>\r\n          <CountButton onClick={decreasePage}>\r\n            <span>-</span>\r\n          </CountButton>\r\n          <PageNumber>{locPage}</PageNumber>\r\n          <CountButton onClick={increasePage}>\r\n            <span>+</span>\r\n          </CountButton>\r\n        </PageContainer>\r\n      );\r\n    } else\r\n      return (\r\n        <PageContainer>\r\n          <PageNumber>{itemsPage}</PageNumber>\r\n        </PageContainer>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <LocDiv className={locationsHidden ? \"hidden\" : \"\"}>\r\n      <Button\r\n        onClick={() => {\r\n          setLocationsHidden(true);\r\n        }}\r\n      >\r\n        Close\r\n      </Button>\r\n\r\n      <Title>Locations</Title>\r\n\r\n      <LocContainer>{locContent()}</LocContainer>\r\n\r\n      {renderPagination()}\r\n\r\n      {isBottom && \"Fetching more locations...\"}\r\n\r\n      <Location\r\n        locationId={location.id === undefined ? 0 : location.id}\r\n        setLocationId={() => {\r\n          setLocation({});\r\n        }}\r\n        location={location}\r\n        setCharacterUrl={setCharacterUrl}\r\n      />\r\n\r\n      <Character\r\n        characterId={characterId}\r\n        setCharacterId={setCharacterId}\r\n        character={character}\r\n      />\r\n    </LocDiv>\r\n  );\r\n};\r\n\r\nexport default Locations;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { useCharacters, useLocations } from \"./api/useData\";\r\n\r\nimport Main from \"./components/main\";\r\n\r\nimport Characters from \"./components/characters/characters\";\r\nimport Locations from \"./components/locations/locations\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nfunction App() {\r\n  const [charPage, setCharPage] = useState(1); //elvileg ezzel kell variálni az oldalakat\r\n  const [locPage, setLocPage] = useState(1);\r\n\r\n  let characters = useCharacters(charPage); //! a useCharacters function paraméterébe az oldal számát kell írni, amit épp lekérdezünk\r\n  let locations = useLocations(locPage); //! ld. előbb\r\n\r\n  // console.log(\"Characters data: \");\r\n  // console.log(characters);\r\n  // console.log(\"Locations data: \");\r\n  // console.log(locations);\r\n\r\n  const [isDescriptionHidden, setDescriptionHidden] = useState(1);\r\n\r\n  const [charactersHidden, setCharactersHidden] = useState(true);\r\n  const [locationsHidden, setLocationsHidden] = useState(true);\r\n\r\n  const renderCharacters = () => {\r\n    if (!charactersHidden) {\r\n      return (\r\n        <Characters\r\n          charactersHidden={charactersHidden}\r\n          characters={characters}\r\n          setCharPage={setCharPage}\r\n          currentPageNo={charPage}\r\n          setCharactersHidden={setCharactersHidden}\r\n        />\r\n      );\r\n    } else return <div></div>;\r\n  };\r\n\r\n  const renderLocations = () => {\r\n    if (!locationsHidden) {\r\n      return (\r\n        <Locations\r\n          locationsHidden={locationsHidden}\r\n          locations={locations}\r\n          setLocPage={setLocPage}\r\n          locPage={locPage}\r\n          setLocationsHidden={setLocationsHidden}\r\n        />\r\n      );\r\n    } else return <div></div>;\r\n  };\r\n\r\n  const renderFrontpage = () => {\r\n    if (locationsHidden && charactersHidden) {\r\n      return (\r\n        <Main\r\n          isDescriptionHidden={isDescriptionHidden}\r\n          setDescriptionHidden={setDescriptionHidden}\r\n          charactersHidden={setCharactersHidden}\r\n          locationsHidden={setLocationsHidden}\r\n        />\r\n      );\r\n    } else return <div></div>;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {renderFrontpage()}\r\n\r\n      {renderCharacters()}\r\n\r\n      {renderLocations()}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from \"react\";\r\nimport { useFetch } from \"./useFetch.js\";\r\nimport { mainUrls } from \"./dataRoutes.js\";\r\n\r\n/**\r\n     Fetch data from an open-source API. It returns json containing pagination.\r\n     The json contains an `info` and a `results` property. The `info` contains every information about the pagination,\r\n     the `results` contains the characters objects situated in the given page number in the pagination.\r\n     *\r\n     * @param pageNum integer that gives the pagination page number. The json `info` property contains how many pages are.\r\n     */\r\nexport const useCharacters = (pageNum = 1) => {\r\n  const [characters, setUrl] = useFetch(mainUrls.characters + pageNum);\r\n  useEffect(() => {\r\n    setUrl(mainUrls.characters + pageNum);\r\n  }, [pageNum, setUrl]);\r\n  return characters === undefined ? \"Loading...\" : characters;\r\n};\r\n\r\n/**\r\n     Fetch data from an open-source API. It returns json containing pagination.\r\n     The json contains an `info` and a `results` property. The `info` contains every information about the pagination,\r\n     the `results` contains the locations objects situated in the given page number in the pagination.\r\n     *\r\n     * @param pageNum integer that gives the pagination page number. The json `info` property contains how many pages are.\r\n     */\r\nexport const useLocations = (pageNum = 1) => {\r\n  const [locations, setUrl] = useFetch(mainUrls.locations + pageNum);\r\n  useEffect(() => {\r\n    setUrl(mainUrls.locations + pageNum);\r\n  }, [pageNum, setUrl]);\r\n  return locations === undefined ? \"Loading...\" : locations;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/get_schwifty.c3d1dfc6.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './fonts/get_schwifty.ttf'; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}